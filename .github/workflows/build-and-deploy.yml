name: Build Test Publish & Deploy Codebase

on:
  push:
    branches:
      - main
      - master
      - 'feature/*'
      - 'bugfix/*'
      - 'hotfix/*'
    paths-ignore:
      - '**.md'
  pull_request:
    branches:
      - main
      - master
      - 'release/*'

env:
  AZURE_WEBAPP_NAME: mhilxdc
  DOCKER_IMAGE_NAME: mhilx/demo-storybook-lite:latest

jobs:
  build:
    name: Prepare Codebase
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node JS
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      - name: Run npm install, build, and test
        run: |
          npm install
          npm run build --if-present
          npm run test --if-present

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ env.DOCKER_IMAGE_NAME }}

    #   - name: Build Docker image
    #     run: docker build -t ${{ env.DOCKER_IMAGE_NAME }} .

    #   - name: Push Docker image to registry
    #     run: docker push ${{ env.DOCKER_IMAGE_NAME }}

  deploy-dev:
    name: Deploy to Dev
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: dev
      url: 'https://${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net/'
    steps:
      - name: Print Environment Variables & Secrets
        run: |
          echo deploying to dev...
          echo 'steps.deploy-to-webapp.outputs.webapp-url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}'
          echo 'MY_ENV_SECRET: ${{ secrets.MY_ENV_SECRET }}'
          echo 'MY_ENV_VARIABLE: ${{ vars.MY_ENV_VARIABLE }}'
          echo 'env.AZURE_WEBAPP_NAME: ${{ env.AZURE_WEBAPP_NAME }}'
          echo 'env.DOCKER_IMAGE_NAME ${{ env.DOCKER_IMAGE_NAME }}'
          echo 'github.sha: ${{ github.sha }}'

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          images: ${{ env.DOCKER_IMAGE_NAME }}

  deploy-qa:
    name: Deploy to QA
    needs: [build, deploy-dev]
    runs-on: ubuntu-latest
    environment:
      name: qa
      url: ${{ steps.deploy-to-webapp.outputs.weapp-url }}
    steps:
      - name: Print Environment Variables & Secrets
        run: |
          echo deploying to dev...
          echo 'MY_ENV_SECRET: ${{ secrets.MY_ENV_SECRET }}'
          echo 'MY_ENV_VARIABLE: ${{ vars.MY_ENV_VARIABLE }}'
          echo 'env.AZURE_WEBAPP_NAME: ${{ env.AZURE_WEBAPP_NAME }}'
          echo 'env.DOCKER_IMAGE_NAME ${{ env.DOCKER_IMAGE_NAME }}'

  publish-package:
    name: Publish to GitHub Package Registry
    needs: [build, deploy-dev, deploy-qa]
    runs-on: ubuntu-latest
    environment:
      name: prod
      url: https://github.com/MHILX?tab=packages
    steps:
      - name: Print Environment Variables & Secrets
        run: |
          echo deploying to dev...
          echo 'MY_ENV_SECRET: ${{ secrets.MY_ENV_SECRET }}'
          echo 'MY_ENV_VARIABLE: ${{ vars.MY_ENV_VARIABLE }}'
          echo 'env.AZURE_WEBAPP_NAME: ${{ env.AZURE_WEBAPP_NAME }}'
          echo 'env.DOCKER_IMAGE_NAME ${{ env.DOCKER_IMAGE_NAME }}'
      - uses: actions/checkout@v4
      # Setup .npmrc file to publish to npm
      - uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          registry-url: 'https://npm.pkg.github.com'
      - run: npm ci
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.PKG_RGS_TOKEN }}
