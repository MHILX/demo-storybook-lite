name: Build Test Publish & Deploy Codebase

on:
  push:
    branches:
      - main
      - master
      - 'feature/*'
      - 'bugfix/*'
      - 'hotfix/*'
    paths-ignore:
      - '**.md'
  pull_request:
    branches:
      - main
      - master
      - 'release/*'

env:
  AZURE_WEBAPP_NAME: node-app
  DOCKER_IMAGE_NAME: liteobject/demo-storybook

jobs:
  build:
    name: Prepare Codebase
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node JS
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      - name: Run npm install, build, and test
        run: |
          npm install
          npm run build --if-present
          npm run test --if-present

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: your-dockerhub-username/storybook-react-app:latest

    #   - name: Build Docker image
    #     run: docker build -t ${{ env.DOCKER_IMAGE_NAME }} .

    #   - name: Push Docker image to registry
    #     run: docker push ${{ env.DOCKER_IMAGE_NAME }}

  deploy-dev:
    name: Deploy to Dev
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: dev
      url: ${{ steps.deploy-to-webapp.outputs.weapp-url }}
    steps:
      - name: Print Environment Variables & Secrets
        run: |
          echo deploying to dev...
          echo 'MY_ENV_SECRET: ${{ secrets.MY_ENV_SECRET }}'
          echo 'MY_ENV_VARIABLE: ${{ vars.MY_ENV_VARIABLE }}'
          echo 'env.AZURE_WEBAPP_NAME: ${{ env.AZURE_WEBAPP_NAME }}'
          echo 'env.DOCKER_IMAGE_NAME ${{ env.DOCKER_IMAGE_NAME }}'

    #   - name: Deploy to Azure Web App
    #     uses: azure/webapps-deploy@v2
    #     with:
    #       app-name: ${{ env.AZURE_WEBAPP_NAME }}
    #       images: ${{ env.DOCKER_IMAGE_NAME }}

  deploy-qa:
    name: Deploy to Dev
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: qa
      url: ${{ steps.deploy-to-webapp.outputs.weapp-url }}
    steps:
      - name: Print Environment Variables & Secrets
        run: |
          echo deploying to dev...
          echo 'MY_ENV_SECRET: ${{ secrets.MY_ENV_SECRET }}'
          echo 'MY_ENV_VARIABLE: ${{ vars.MY_ENV_VARIABLE }}'
          echo 'env.AZURE_WEBAPP_NAME: ${{ env.AZURE_WEBAPP_NAME }}'
          echo 'env.DOCKER_IMAGE_NAME ${{ env.DOCKER_IMAGE_NAME }}'

  deploy-prod:
    name: Deploy to Dev
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: prod
      url: ${{ steps.deploy-to-webapp.outputs.weapp-url }}
    steps:
      - name: Print Environment Variables & Secrets
        run: |
          echo deploying to dev...
          echo 'MY_ENV_SECRET: ${{ secrets.MY_ENV_SECRET }}'
          echo 'MY_ENV_VARIABLE: ${{ vars.MY_ENV_VARIABLE }}'
          echo 'env.AZURE_WEBAPP_NAME: ${{ env.AZURE_WEBAPP_NAME }}'
          echo 'env.DOCKER_IMAGE_NAME ${{ env.DOCKER_IMAGE_NAME }}'
